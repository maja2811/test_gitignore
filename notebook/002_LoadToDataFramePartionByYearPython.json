{
	"name": "002_LoadToDataFramePartionByYearPython",
	"properties": {
		"folder": {
			"name": "sapcrm/PartionByYearMonth"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "AtlasSparkDev",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "885df8ea-ca98-4949-a7f5-271198a4e5e8"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/b3aa98da-48aa-4bc9-aba1-effeb7407b42/resourceGroups/rg-atlas-synapse-analytics-dev/providers/Microsoft.Synapse/workspaces/atlas-synapse-analytics-dev/bigDataPools/AtlasSparkDev",
				"name": "AtlasSparkDev",
				"type": "Spark",
				"endpoint": "https://atlas-synapse-analytics-dev.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/AtlasSparkDev",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"outputs_hidden": false
					},
					"collapsed": false
				},
				"source": [
					"df = spark.read.load('abfss://sandbox@datalakegen2atlasdev.dfs.core.windows.net/datalakehouse-data_management_team/sapcrm/CCRMBPART.parquet', format='parquet')\r\n",
					"display(df.limit(10))\r\n",
					""
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"#from datetime import datetime\r\n",
					"from pyspark.sql.functions import col, concat_ws\r\n",
					"# Remove the CustomerName field\r\n",
					"transformed_df = df.drop(\"0BP_ID_TYPE___T\")\r\n",
					"display(transformed_df.limit(5))\r\n",
					"##\"0CREATEDON\""
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"transformed_df.write.mode(\"overwrite\").parquet('abfss://zone-connected@datalakegen2atlasdev.dfs.core.windows.net/released/sapcrm/notebooks/transformed_data/CCRMBPART')\r\n",
					"\r\n",
					"print (\"Transformed data saved!\")"
				],
				"execution_count": 31
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"from pyspark.sql.functions import year, month, col\r\n",
					"\r\n",
					"dated_df = transformed_df.withColumn(\"Year\", col(\"0CREATEDON\")[0:4]).withColumn(\"Month\", col(\"0CREATEDON\")[5:2])\r\n",
					"\r\n",
					"#display(dated_df.limit(5))\r\n",
					"dated_df.write.partitionBy(\"Year\",\"Month\").mode(\"overwrite\").parquet('abfss://zone-connected@datalakegen2atlasdev.dfs.core.windows.net/released/sapcrm/notebooks/partitioned_data/CCRMBPART')\r\n",
					"\r\n",
					"##print (\"Transformed data saved!\")"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"##Transform with sql, save as table (Be aware of its external tables)\r\n",
					"df.write.saveAsTable('CRMUsers', format='parquet', mode='overwrite', path='abfss://zone-connected@datalakegen2atlasdev.dfs.core.windows.net/released/sapcrm/notebooks/transformed_orders_table/CCRMBPART')"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"sql_transform = spark.sql(\"SELECT *, YEAR(OrderDate) AS Year, MONTH(OrderDate) AS Month FROM CRMUsers\")\r\n",
					"display(sql_transform.limit(5))\r\n",
					"sql_transform.write.partitionBy(\"Year\",\"Month\").saveAsTable('transformed_orders', format='parquet', mode='overwrite', path='abfss://zone-connected@datalakegen2atlasdev.dfs.core.windows.net/released/sapcrm/notebooks/transformed_orders_table/CCRMBPART')\r\n",
					""
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"SELECT * FROM CRMUsers\r\n",
					"WHERE Year = 2021    AND Month = 1"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\r\n",
					"--Because these are external tables, you can drop the tables from the metastore without deleting the files - so the transfomed data remains available for other downstream data analytics or ingestion processes.\r\n",
					"DROP TABLE transformed_orders;\r\n",
					"DROP TABLE sales_orders;"
				]
			}
		]
	}
}